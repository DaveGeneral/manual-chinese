[[tutorials-java-unit-testing]]
基本的单元测试
=======

Neo4j的单元测试的基本模式通过下面的范例来阐释。

要访问Neo4j测试功能，你应该把+neo4j-kernel+ 'tests.jar'新增到你的类路径中。
你可以从Maven Central: http://search.maven.org/#search|ga|1|g%3A%22org.neo4j%22%20AND%20a%3A%22neo4j-kernel%22[org.neo4j:neo4j-kernel]下载到需要的jars。

使用Maven作为一个依赖管理，你通常会正pom.xml中增加依赖配置：

.Maven 依赖
[source,xml]
--------------------------------------------
<project>
...
 <dependencies>
  <dependency>
   <groupId>org.neo4j</groupId>
   <artifactId>neo4j-kernel</artifactId>
   <version>${neo4j-version}</version>
   <type>test-jar</type>
   <scope>test</scope>
  </dependency>
  ...
 </dependencies>
...
</project>
--------------------------------------------

_ +$\{neo4j-version}+ 是Neo4j的版本号。_

到此，我们已经准备好进行单元测试编码了。

[TIP]
范例源代码下载地址：
https://github.com/neo4j/community/blob/{neo4j-git-tag}/embedded-examples/src/test/java/org/neo4j/examples/Neo4jBasicTest.java[Neo4jBasicTest.java]


每一次开始单元测试之前，请创建一个干净的数据库：

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/Neo4jBasicTest.java
classifier=test-sources
tag=beforeTest
----

在测试完成之后，请关闭数据库：

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/Neo4jBasicTest.java
classifier=test-sources
tag=afterTest
----

在测试期间，创建节点并检查它们是否存在，并在一个事务中结束写操作。

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/Neo4jBasicTest.java
classifier=test-sources
tag=unitTest
----

如果你想查看创建数据库的参数配置，你可以这样：

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/Neo4jBasicTest.java
classifier=test-sources
tag=startDbWithConfig
----


