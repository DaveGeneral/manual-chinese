[[deployment-upgrading]]
升级
==

一个数据库可以从一个主要的版本升级到下一个版本，比如：1.1 ->1.2，1.2 -> 1.3，
但你不呢个你直接从1.1 -> 1.3跳跃升级。
特别是对于1.8，你能从1.5.3以及更新的版本直接升级，作为一个明确的升级。
升级进度只有一个步骤; 数据库不能被降级。

对于大部分的升级来说，只有很小的变更会涉及到数据库存储，
而当你使用更新版本的Neo4j启动数据库时这些变更会自动完成。

然而，一些更新要求对数据库存储进行显著的变更。
在这种情况下，Neo4j在没有明确配置允许升级的情况下是拒绝升级的。

下面的表格列举了最近的Neo4j版本，以及各个类型的升级要求。

.Neo4j各版本升级情况
[format="csv",width="50%",cols="3"]
[frame="topbot",grid="none",options="header"]
|====
原来版本,新的版本,升级类型
1.3,1.4,自动升级
1.4,1.5,显性升级
1.5,1.6,显性升级
1.6,1.7,自动升级
1.7,1.8,自动升级
|====

== 自动升级 ==

执行一次普通升级（对于数据库存储有少量变更）：

. 下载更新版本的Neo4j。
. 如果要升级的数据库在运行，先关闭。
. 使用新版本的Neo4j启动数据库。

== 显性升级 ==

执行一次指定升级（对于数据库存储有显著变更）：

. 确保你要升级的数据库已经被明确关闭。
. 在你的配置文件 'neo4j.properties' 或者嵌入配置参数中设置参数： "+allow_store_upgrade=true+" 。
. 启动数据库。
. 当数据库被成功启动后，升级会自动发生。
. "+allow_store_upgrade=true+" 配置参数应该被移除或者设置为 "+false+"，或者被注释掉。

[[deployment-upgrading-one-eight]]
== 升级：1.7 -> 1.8 ==
这两个版本没有存储格式的变更，因此独立单例的升级只需要用新版本的Neo4j启动数据库即可。
对于HA模式，社区协议和主服务器的选举算法有变更，增加了一个新功能："rolling upgrade"，移除了需要关闭的整个集群。
要获取细节，请参考Neo4j手册中HA部分的 "升级一个Neo4j集群" 章节。

[[deployment-upgrading-one-seven]]
== 升级：1.6 -> 1.7 ==

这两个版本没有存储格式的变更，因此独立单例的升级只需要用新版本的Neo4j启动数据库即可。

在一个HA环境，需要执行以下步骤：

. 关闭在集群中的所有数据库。
. 关闭ZooKeeper集群并且清除在所有ZooKeeper实例中的 'version-2' 目录。
. 再次启动 ZooKeeper 集群。
. 移除期望主服务器的数据库，并且使用Neo4j1.7启动主服务器。
. 启动其他数据库，以便它们能从主服务器获取拷贝。

[[deployment-upgrading-one-six]]
== 升级：1.5 -> 1.6 ==

这个升级中lucene版本从3.1升级到3.5。升级是通过Lucene加载一个索引来自动完成的。

在一个HA环境中，需要执行以下步骤：

. 关闭在集群中的所有服务器。
. 关闭ZooKeeper集群并且清除在所有ZooKeeper实例中的 'version-2' 目录。
. 再次启动 ZooKeeper 集群。
. 启动其他数据库，以便它们能从主服务器获取拷贝。

[[deployment-upgrading-one-five]]
== 升级：1.4 -> 1.5 ==

这个升级包括一个关于属性存储文件布局的显著的变更，减少它们占用磁盘的空间并且提高IO性能。
为了完成这个布局变更，升级进程需要花一些时间来遍历整个存在的数据库。
你应该为每G数据分配几分钟的升级时间。


[WARNING]
这个升级会临时请求额外的磁盘空间。
在启动升级到Neo4j 1.5版本之前，你应该确保有与当前数据库相同大小的空闲磁盘空间用于升级操作。
你可以查看存储文件目录（ 'data/graph.db' 是Neo4j数据库默认目录位置）
来找到数据库的存储空间。
一旦升级完成，额外的空间不再需要。

