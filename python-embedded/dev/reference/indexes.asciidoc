[[python-embedded-reference-indexes]]
索引
==

为了快速通过属性找到节点或者关系，Neo4j支持索引。
这个常被用来找到 <<python-embedded-reference-traversal,traversals>> 用的起始节点。

默认情况下，相关的索引是由http://lucene.apache.org/java/docs/index.html[Apache Lucene]提供的。但也能使用其他索引实现来提供。

您可以创建任意数量的命名索引。
每个索引控制节点或者关系，而每个索引都通过key/value/object三个参数来工作。
其中object要么是一个节点，要么是一个关系，取决于索引类型。

== 索引管理 ==

就像 REST API一样，所有到一个索引的写操作都必须在一个事务中完成。

=== 创建一个索引 ===

创建一个带配置的索引

[snippet,python]
----
component=neo4j-python-embedded
source=index.py
tag=createIndex
classifier=test-sources
----

=== 接收一个预先存在的索引 ===

[snippet,python]
----
component=neo4j-python-embedded
source=index.py
tag=getIndex
classifier=test-sources
----

=== 移除索引 ===

[snippet,python]
----
component=neo4j-python-embedded
source=index.py
tag=deleteIndex
classifier=test-sources
----

=== 检查一个索引是否存在 ===

[snippet,python]
----
component=neo4j-python-embedded
source=index.py
tag=checkIfIndexExists
classifier=test-sources
----

== 被索引的东西 ==

=== 增加节点或者关系到索引 ===

[snippet,python]
----
component=neo4j-python-embedded
source=index.py
tag=addToIndex
classifier=test-sources
----

=== 移除索引的条目 ===

在不同的层面移除索引的条目。
看下面的范例了解信息。

[snippet,python]
----
component=neo4j-python-embedded
source=index.py
tag=removeFromIndex
classifier=test-sources
----

== 查询一个索引 ==

你可以通过两种方式接收索引的条目。
要么你做一个直接的查找，要么你执行一个查询。
直接的查找在不同的索引服务是一样的，索引的语法取决于你使用的索引服务。
像之前提过的一样，Lucene是默认索引服务并且它也是使用最多的索引服务。
了解你想使用的Lucene，请参考： http://lucene.apache.org/java/{lucene-version}/queryparsersyntax.html[Lucene query language]。

一个编程生成Lucene查询的python库在这里：https://github.com/scholrly/lucene-querybuilder[GitHub]。


[IMPORTANT]
除非遍历整个索引结果，否则当你用完它后你必须关闭结果。
如果你没有关闭，数据库不知道他什么时候能释放结果资源。

=== 直接轮循 ===

[snippet,python]
----
component=neo4j-python-embedded
source=index.py
tag=directLookup
classifier=test-sources
----

=== 查询 ===

[snippet,python]
----
component=neo4j-python-embedded
source=index.py
tag=query
classifier=test-sources
----

